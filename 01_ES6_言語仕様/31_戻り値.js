/**
 * * 関数の呼び出し元で受け取る処理結果を戻り値と呼び、このことを「関数が戻り値を返す」と言います。
 * 関数の中で return を使うと、呼び出し元で価を受け取れるようになります。
 * 「return 値」と書く事で、関数はその値を戻り値として返します。
 * 呼び出した関数に戻り値がある場合、関数の呼び出し部分がそのまま戻り値に置き換わります。
 * その関数の呼び出し部分を定数に代入することもできます。
 * 戻り値も引数と同様に条件式の結果として得られる真偽値を返す事ができます。
 * returnは戻り値を返すだけでなく、関数の処理を終了させる性質を持っています。
 * よって、returnの後にある関数内の処理は実行されませんので注意をする必要があります。
 */

const half = (number) => {
  // numberを2で割った値を戻り値として返してください
  return number / 2;
};

// 定数resultを定義してください
const result = half(130);

// 「130の半分は〇〇です」となるように出力してください
console.log(`130の半分は${result}です`);

const check = (number) => {
  // numberが3の倍数かどうかを戻り値として返してください
  return number % 3 === 0;

};

// if文の条件式で、checkを呼び出してください
if (check(123)) {
  console.log("3の倍数です");
} else {
  console.log("3の倍数ではありません");
}

